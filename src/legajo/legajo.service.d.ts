import { CreateLegajoDto } from './dto/create-legajo.dto';
import { UpdateLegajoDto } from './dto/update-legajo.dto';
import { Legajo } from './entities/legajo.entity';
import { Repository } from 'typeorm';
import { PaginationDto } from 'src/common/dtos/pagination.dto';
export declare class LegajoService {
    private readonly legajoRepository;
    constructor(legajoRepository: Repository<Legajo>);
    create(createLegajoDto: CreateLegajoDto): Promise<Legajo>;
    findAll(paginationDto: PaginationDto): Promise<{
        data: {
            sexo: string;
            equipo_territorial: string;
            id_legajo: number;
            activo: boolean;
            apellido: string;
            nombre: string;
            fecha_nacimiento: Date;
            calle_legajo: string;
            tpo_pub_prv_cob_sal: number;
            codigo: string;
            constancia_parto: number;
            detalle_probl_salud: string;
            direccion: string;
            email: string;
            escolarizado: string;
            establecimento_escolarizado: string;
            estado_documento: number;
            estado_causa_judicial: number;
            estado_obra_social: number;
            estado_probl_salud: number;
            file_dni: string;
            file_partida_nac: string;
            file_problematica_salud: string;
            nivel_educacion: string;
            nro_documento: string;
            numero_calle: string;
            observ_obra_social: string;
            observaciones: string;
            partida_nacimiento: number;
            probl_salud: string;
            referencia_llamada102: string;
            se_interv_en_su_gestion: number;
            sexo_id: number;
            telefono: string;
            telefono_legajo: string;
            tpo_cobertura_salud: number;
            tipo_documento: string;
            usuario_alta_id: number;
            usuario_modif_id: number;
            localidad_id: number;
            localidad: import("../localidad/entities/localidad.entity").Localidad;
            municipio_id: number;
            municipio: import("../municipio/entities/municipio.entity").Municipio;
            nacionalidad_id: number;
            nacionalidad: import("../pais/entities/pais.entity").Pais;
            obra_social_id: number;
            pais_id: number;
            pais: import("../pais/entities/pais.entity").Pais;
            provincia_id: number;
            provincia: import("../provincia/entities/provincia.entity").Provincia;
            acompaniante_id: number;
            equipot_id: number;
            fecha_alta: Date;
            ultima_actualizacion: Date;
            fecha_baja: Date;
        }[];
        total: number;
    }>;
    findOne(id: number): Promise<Legajo>;
    update(id: number, updateLegajoDto: UpdateLegajoDto): Promise<import("typeorm").UpdateResult>;
    remove(id: number): Promise<{
        message: string;
        raw: any;
        affected?: number;
        generatedMaps: import("typeorm").ObjectLiteral[];
    }>;
}
